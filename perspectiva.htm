<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>perspectiva</title>
    <style>
        body {
            margin: 0;
        }
        canvas {
            display: block;
        }
    </style>
</head>
<body>
    <script src="https://cdn.jsdelivr.net/npm/three@0.133.0/build/three.min.js"></script>
    <script>
        // Creamos una escena
        const scene = new THREE.Scene();

        // Creamos la cámara y la posición
        const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);
        camera.position.set(1, 0, 3);

        // Creamos una luz y la posición
        const light = new THREE.PointLight(0xffffff, 1, 100);
        light.position.set(0, 0, 10);
        scene.add(light);

        // Creamos el renderizador y establecemos el tamaño
        const renderer = new THREE.WebGLRenderer();
        renderer.setSize(window.innerWidth, window.innerHeight);
        document.body.appendChild(renderer.domElement);

        const geometry = new THREE.BufferGeometry();

const vertices = new Float32Array([
    -1, -1, 1,
    1, -1, 1,
    1, -1, -1,
    -1, -1, -1,
    0, 1, 0,
]);
geometry.setAttribute('position', new THREE.BufferAttribute(vertices, 3));

const indices = new Uint16Array([
    0, 1, 4,
    1, 2, 4,
    2, 3, 4,
    3, 0, 4,
    1, 0, 3,
    2, 1, 3,
]);
geometry.setIndex(new THREE.BufferAttribute(indices, 1));


        // Creamos el material y el mesh
        const material = new THREE.MeshBasicMaterial({ color: 0xff0000, wireframe: true });
        const pyramid = new THREE.Mesh(geometry, material);

        // Agregamos la pirámide a la escena
        scene.add(pyramid);

        // Renderizamos la escena
        renderer.render(scene, camera);
    </script>
</body>
</html>

